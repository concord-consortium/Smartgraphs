GraphController methods not used:

setAxes
removeSeries
selectSeries


ACTIVITY_STEP commands not used:

setAxes
displaySeriesOnGraph
copyExampleSeriesToGraph
removeSeries
removeAllSeries
selectDataSeries

removeAnnotation (** BUT note this *should* be used!)

===


changes:


Models

add BaseTable model
make BaseTable model include seriesList and annotationList
modify Graph model to reference BaseTable model
make Table model analagous to Graph model


Controllers

* BaseTable controller does much of what the graph controller used to do.

* Ah, but what represents the 'deltas' between the base table and an underlying graph? Maybe another BaseTable? For now, don't worry about this.

* Okay, how to have multiple base table controllers? Try the 'dynamically created controller' model this time.


commands and activity step definition

paneConfig: "config name" (just pass this to activity view controller)

panes: {
 top: { type: "graph", baseTable: 'base-table-name' }
 bottom: { type: "table", baseTable: 'base-table-name' }
}

new commands: 
  (modify showGraph to accept a base table name)
  showTable

commands to modify:

  showSinglePane/showSplitPane (--> setPaneConfig)
  createSeriesOnGraph (change name to 'createSeries', modify 'pane' to baseTable & make optional)
  removeSeries
  createAnnotation
  addAnnotation
  removeAnnotation
  
  startFreehandInput --> 'pane' for where controls go, 'baseTable' for table
  startSensorInput --> likewise.
  
  
  
TO GET STARTED:

(1) change paneConfig handling. Confirm it works.
(2) name all the graphs. Switch from 'pane' arguments to 'graph' arguments.
(3) make a TableView, using the old code
(4) let showTable command accept 'graph' argument as well.
(5) copy graph to session?
